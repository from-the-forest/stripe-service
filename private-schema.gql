# relay pagination
type PageInfo {
    startCursor: String
    endCursor: String
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
}

# ###################################################################
# Prices - Associated with a product
# ###################################################################


input PricesInput {
    first: Int = 10
    after: String
}

type Price {
    id: ID!
    currency: String!
    type: String!
    amount: Int!,
    formattedAmount: String!,
}

type PriceEdge {
    cursor: String!
    node: Price!
}

type PricesConnection {
    pageInfo: PageInfo!
    edges: [PriceEdge!]!
}

# ###################################################################
# Products - What you sell; both physical and digial
# ###################################################################

input SearchProductsInput {
    first: Int = 10
    after: String
}

type Product {
    id: String!
    name: String!
    description: String!
    images: [String!]!
    shippable: Boolean
    prices(input: PricesInput): PricesConnection!
}

type SearchProductsEdge {
    cursor: String!
    node: Product!
}

type SerachProductsConnection {
    pageInfo: PageInfo!
    edges: [SearchProductsEdge!]!
}

# ###################################################################
# Promotion Codes 
# ###################################################################

input SearchPromotionCodesInput {
    first: Int = 10
    after: String
}

type PromotionCode {
    id: String!
    code: String!
}

type PromotionCodeEdge {
    cursor: String!
    node: PromotionCode!
}

type SearchPromotionCodesConnection {
    pageInfo: PageInfo!
    edges: [PromotionCodeEdge!]!
}

# ###################################################################
# Queries & Mutations
# ###################################################################

type Query {
    "Stripe Products (used for physical products and subscriptions)"
    searchProducts(input: SearchProductsInput): SerachProductsConnection!

    "Stripe Promotion Codes https://dashboard.stripe.com/test/coupons"
    searchPromotionCodes(input: SearchPromotionCodesInput): SearchPromotionCodesConnection!
}

# type Mutation {
#     createPaymentMethod: PaymentMethod!
#     updatePaymentMethod: PaymentMethod!
#     deletePaymentMethod: PaymentMethod!

#     "create AND update"
#     subscribe(input: SubscribeInput):  Subscription!
#     unsubscribe: Subscription!

#     validatePromoCode(input: String!): Boolean!

#     # checkout?
# }

# ###################################################################
# Remote Types
# ###################################################################

# This is a "stub" of the User entity (see below)
# extend type User @key(fields: "id") {
#     "Node ID"
#     id: ID! @external
#     paymentMethods: [PaymentMethod]
#     subscription: Subscription
#     charges: [Charge]
# }

# extend interface Node {
#     id: ID! @external
# }
